"""
A simple Monte Carlo solver for Nim
http://en.wikipedia.org/wiki/Nim#The_21_game
"""

import random
import codeskulptor
import user45_FyCt5JNVak_3 as my_test

codeskulptor.set_timeout(20)

MAX_REMOVE = 3
TRIALS = 10


def game_simulation(num_items):
    """
    Simulira random igru
        """
    comp_won=0
    current_items=int(num_items)
    while current_items>0:
        if current_items==3:
            comp=2
        elif current_items==2 or current_items ==1:
            comp=1
        else:
            comp=random.randint(1,3)
        print "Comp play",comp,"status",current_items-comp
        current_items-=comp
        if current_items ==0:
            comp_won = False
            break
        human=random.randint(1,3)
        if current_items-human<0:
            human = int (current_items)
        print "human play",human,"status",current_items-human
        if current_items-human ==0:
            comp_won = True
        current_items-=human
    #print "Current items",current_items
    #print comp_won
    return comp_won

def check_event(num_item):
    broj=0
    lista=[]
    for i in range(3):
        for _ in range(TRIALS):
            events=game_simulation(num_item)
            if events:
                broj+=1
        lista.append(broj)
        broj=0
    print(lista)
    
    return lista

def evaluate_position(num_items):
    """
    Monte Carlo evalation method for Nim
    """
    
    a_list=check_event(num_items)
    print max(a_list)
    print a_list.index(max(a_list))
    best_move=a_list.index(max(a_list))+1
    print "Best move", best_move
    return best_move  
    
        
#game_simulation(5)

#check_event()

#evaluate_position(3)

#my_test.nim_tester(game_simulation)

def play_game(start_items):
    """
    Play game of Nim against Monte Carlo bot
    """
    
    current_items = start_items
    print "Starting game with value", current_items
    while True:
        comp_move = evaluate_position(current_items)
        current_items -= comp_move
        print "Computer choose", comp_move, ", current value is", current_items
        if current_items <= 0:
            print "Computer wins"
            break
        player_move = int(input("Enter your current move"))
        current_items -= player_move
        print "Player choose", player_move, ", current value is", current_items
        if current_items <= 0:
            print "Player wins"
            break

#play_game(21)
        
    
                 
    