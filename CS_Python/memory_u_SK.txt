# implementation of card game - Memory

import simplegui
import random
deck=[]
click_pos=[]
exposed=[0]*16
state=0
count=0

# helper function to initialize globals
def new_game():
    global deck,state,exposed,count
    list1=range(0,8)
    list2=range(0,8)
    deck=list1+list2
    random.shuffle(deck)
    exposed=[0]*16
    state=0
    label.set_text("Turns = 0")


     
# define event handlers
def mouseclick(pos):
    # add game state logic here
    global click_pos, state,exposed,deck,card1,card2,count
    click_pos=list(pos)
    print( click_pos[0]//50)

   
    if state==0:
        card1=click_pos[0]//50
        exposed[card1]=1
        state=1
    elif state ==1 and card1!=click_pos[0]//50:
        card2=click_pos[0]//50
        exposed[card2]=1
        count+=1
        label.set_text("Turns="+ str(count))
        state=2
    elif state==2:
        if not deck[card1]==deck[card2]:
            exposed[card1]=0
            exposed[card2]=0
        card1=click_pos[0]//50
        exposed[card1]=1
            
        
        state=1
        
        
        
       
        
    
                        
# cards are logically 50x100 pixels in size    
def draw(canvas):
    global deck,click_pos
    
    
    loc=800/16-35
    loc2=800/16
    
    
    for i in range(len(deck)):
        
        if exposed[i]: 
            canvas.draw_text(str(deck[i]),(loc,60),30,"Green")
        else:
            canvas.draw_polygon(([i*loc2,0],[(i+1)*loc2,0],[(i+1)*loc2,100],[i*loc2,100]),2,"Red", "Green")
        loc+=800/16
    
    

# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 800, 100)
frame.add_button("Reset", new_game)
label = frame.add_label("Turns = 0")

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
new_game()
frame.start()


# Always remember to review the grading rubric